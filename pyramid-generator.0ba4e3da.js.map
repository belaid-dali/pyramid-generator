{"mappings":"ACAA,IAAM,UAAY,IAEZ,YAAc,SAAS,cAAc,CAAC,UACtC,YAAc,SAAS,cAAc,CAAC,gBACtC,cAAgB,SAAS,cAAc,CAAC,iBAE1C,SAAW,CAAA,EAEf,SAAS,OAAO,CAAS,CAAE,CAAQ,EAC/B,IAAM,EAAS,IAAI,MAAM,CAAC,EAAW,GAErC,OAAO,EADO,AAVA,IAUU,MAAM,CAAC,EAAE,EAAY,GACrB,CAC5B,CAEA,SAAS,gBAAgB,CAAM,EAC3B,IAAM,EAAO,EAAE,CACf,IAAK,IAAI,EAAI,EAAG,GAAK,EAAQ,IAAK,CAC9B,IAAM,EAAM,OAAO,EAAG,GAClB,SACA,EAAK,OAAO,CAAC,GAEb,EAAK,IAAI,CAAC,EAElB,CACA,OAAO,EAAK,IAAI,CAAC,KACrB,CAEA,YAAY,gBAAgB,CAAC,QAAS,KAClC,IAAM,EAAc,SAAS,YAAY,KAAK,EAC9C,GAAI,MAAM,IAAgB,EAAc,EAAG,CACvC,cAAc,WAAW,CAAG,+BAC5B,MACJ,CAEA,cAAc,WAAW,CADT,gBAAgB,EAEpC","sources":["<anon>","script.js"],"sourcesContent":["const character = \"*\";\nconst heightInput = document.getElementById('height');\nconst generateBtn = document.getElementById('generatorBtn');\nconst pyramidOutput = document.getElementById('puramidOutput');\nlet inverted = false;\nfunction padRow(rowNumber, rowCount) {\n    const spaces = \" \".repeat(rowCount - rowNumber);\n    const chars = character.repeat(2 * rowNumber - 1);\n    return spaces + chars + spaces;\n}\nfunction generatePyramid(height) {\n    const rows = [];\n    for(let i = 1; i <= height; i++){\n        const row = padRow(i, height);\n        if (inverted) rows.unshift(row);\n        else rows.push(row);\n    }\n    return rows.join(\"\\n\");\n}\ngenerateBtn.addEventListener(\"click\", ()=>{\n    const heightValue = parseInt(heightInput.value);\n    if (isNaN(heightValue) || heightValue < 1) {\n        pyramidOutput.textContent = \"Please enter a valid height!\";\n        return;\n    }\n    const pyramid = generatePyramid(heightValue);\n    pyramidOutput.textContent = pyramid;\n});\n\n//# sourceMappingURL=pyramid-generator.0ba4e3da.js.map\n","const character = \"*\";\n\nconst heightInput = document.getElementById('height');\nconst generateBtn = document.getElementById('generatorBtn');\nconst pyramidOutput = document.getElementById('puramidOutput');\n\nlet inverted = false;\n\nfunction padRow(rowNumber, rowCount) {\n    const spaces = \" \".repeat(rowCount - rowNumber);\n    const chars = character.repeat(2*rowNumber - 1);\n    return spaces + chars + spaces;\n}\n\nfunction generatePyramid(height) {\n    const rows = [];\n    for (let i = 1; i <= height; i++) {\n        const row = padRow(i, height);\n        if (inverted) {\n            rows.unshift(row);\n        } else {\n            rows.push(row);\n        }\n    }\n    return rows.join(\"\\n\");\n}\n\ngenerateBtn.addEventListener(\"click\", () => {\n    const heightValue = parseInt(heightInput.value);\n    if (isNaN(heightValue) || heightValue < 1) {\n        pyramidOutput.textContent = \"Please enter a valid height!\";\n        return;\n    }\n    const pyramid = generatePyramid(heightValue);\n    pyramidOutput.textContent = pyramid;\n})"],"names":["character","heightInput","document","getElementById","generateBtn","pyramidOutput","inverted","padRow","rowNumber","rowCount","spaces","repeat","generatePyramid","height","rows","i","row","unshift","push","join","addEventListener","heightValue","parseInt","value","isNaN","textContent"],"version":3,"file":"pyramid-generator.0ba4e3da.js.map"}